#!/usr/bin/python
# -*- coding: utf-8 -*-

import json
import os
import re
import threading
import logging
import time
import codecs
import configparser
import discord
from discord.ext import tasks, commands
import urllib.parse as quote
from datetime import datetime, timedelta
import requests
from sseclient import SSEClient as EventSource


UPD_DELAY = 24  # –∫–æ–ª-–≤–æ —á–∞—Å–æ–≤ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
LIMIT = 3  # –∫–æ–ª-–≤–æ –æ—Ç–∫–∞—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–µ–∫—Ç, –ø–æ—Ä–æ–≥ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
MINUTES = 30  # –∫–æ–ª-–≤–æ –º–∏–Ω—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
MAX_MESSAGES = 500  # –º–∞–∫—Å–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π, –ø–æ–ª—É—á–∞–µ–º—ã—Ö –∏–∑ Discord –±–æ—Ç–æ–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
REPEAT = 10  # –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∏—Ç–µ—Ä–∞—Ü–∏—è–º–∏ –±–æ—Ç–∞-—á–∏—Å—Ç–∏–ª—å—â–∏–∫–∞
# ID –∫–∞–Ω–∞–ª–∞, ID —Ü–µ–ª–µ–≤—ã—Ö —ç–º–æ–¥–∑–∏, —Ü–µ–ª–µ–≤—ã–µ —Ü–≤–µ—Ç–∞ (–¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–∏ –∫–æ–¥–µ 404), ID —Ü–µ–ª–µ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–±–æ—Ç–∞),
# ID –∫–∞–Ω–∞–ª–∞ Readme, ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–æ–ª—è–º–∏, ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥ –∏ ID —Ä–æ–ª–µ–π (w - war / d - deletion / s - spam).

CHANNEL = {"ID": 1025787733463015426, "EMOJI_IDS": [1025790689495220274, 1025791022514577500, 1025791468054528020],
           "COLORS": [16776960, 65280], "BOT": 1009429427031117935, "README": 1025787779747164242,
           "README_MSG": 1025788958384345098, "BOTCOMMANDS": 1025787818997448844,
           "ROLES": {"üáº": 1025799311667232778, "üá©": 1025799458178478161, "üá∏": 1025799582002712676}}


# CHANNEL = {"ID": 1020710319598883028, "EMOJI_IDS": [1010187383796416542, 1010187351064060005, 1010187427417182210],
#            "COLORS": [16776960, 65280], "BOT": 1009429427031117935, "README": 1010899364371247194,
#            "README_MSG": 1010902222969774201, "BOTCOMMANDS": 1020703959763136523,
#            "ROLES": {"üáº": 1020352779925061662, "üá©": 1020355145873231964, "üá∏": 1020355276953628723}}


logging.basicConfig(level=logging.ERROR, filename=os.path.dirname(os.getcwd()) + "/swviewer/service/wars/logs.txt",
                    filemode="a+", format="%(asctime)-15s %(levelname)-8s %(message)s")
config = configparser.ConfigParser(inline_comment_prefixes="#")
config.read_file(codecs.open(os.path.dirname(os.getcwd()) + "/swviewer/security/wars-config.ini", "r", "utf8"))
EDIT_COUNT = int(config["SWVWars"]["edit_count"])  # –∫–æ–ª-–≤–æ –ø—Ä–∞–≤–æ–∫ ¬´–Ω–æ–≤–∏—á–∫–∞¬ª –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
PAGE_SIZE = int(config["SWVWars"]["page_size"])  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π –≤–µ—Å –≤ –±–∞–π—Ç–∞—Ö —Å–ø–∞–º-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
ELEMENTS = config["SWVWars"]["elements"].split("|-|")  # —ç–ª–µ–º–µ–Ω—Ç—ã, –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö, –±–æ—Ç –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–æ–≤–∏—á–∫–∞
REPEAT = float(REPEAT * 60)


class Edit:
    edits_count = 0

    def __init__(self, domain, database, title, page_id, rev_id, parent_id, next_id, next_user, user, new_len,
                 event_type, timestamp):
        self.domain = domain
        self.wiki = database
        self.title = title
        self.page_id = page_id
        self.rev_id = rev_id
        self.next_id = next_id
        self.user = user
        self.parent_id = parent_id
        self.next_user = next_user
        self.new_len = new_len
        self.type = event_type
        self.timestamp = timestamp
        self.reported = 0
        Edit.edits_count += 1

    def get_url(self, target_type):
        if target_type == "page":
            return "https://{0}/wiki/{1}?action=history&uselang=en".format(
                self.domain, quote.quote_plus(self.title.replace(" ", "_")))
        if target_type == "user":
            return "https://{0}/wiki/Special:Contribs/{1}?uselang=en".format(
                self.domain, quote.quote_plus(self.user.replace(" ", "_")))
        if target_type == "other":
            return "https://{0}/wiki/Special:RecentChanges?uselang=en".format(self.domain)


WIKI_SET = []
DELETE_SUMMARY = ["Requesting [[WP:CSD|speedy deletion]]", "Requesting deletion", "Zahtjev za brisanjem stranice",
                  "‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶Ö‡¶™‡¶∏‡¶æ‡¶∞‡¶£‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡¶æ‡¶¨ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤", "Marcant la p√†gina per a la seva supressi√≥ immediata",
                  "Requesting [[COM:CSD|speedy deletion]]", "Der Artikel wurde zur Schnelll√∂schung vorgeschlagen",
                  "ŒëŒØœÑŒ∑ŒºŒ± [[ŒíŒ†:ŒìŒî|Œ¨ŒºŒµœÉŒ∑œÇ Œ¥ŒπŒ±Œ≥œÅŒ±œÜŒÆœÇ]]", "Solicitando borrado r√°pido",
                  "Merkitty poistettavaksi v√§litt√∂m√§sti", "Demande de [[WP:CSI|suppression imm√©diate]]",
                  "‡™™‡™æ‡™®‡´Å‡™Ç ‡™π‡™ü‡™æ‡™µ‡™µ‡™æ ‡™µ‡™ø‡™®‡™Ç‡™§‡´Ä", "‡§∂‡•Ä‡§ò‡•ç‡§∞ ‡§π‡§ü‡§æ‡§®‡•á ‡§ï‡§æ ‡§®‡§æ‡§Æ‡§æ‡§Ç‡§ï‡§®", "Meminta [[WP:KPC|penghapusan cepat]]",
                  "Requesting [[Wikipedia:Vi√∞mi√∞ um ey√∞ingu greina|speedy deletion]]",
                  "Requesting [[Project:Deletion|speedy deletion]]", "Requesting [[WM:CSD|speedy deletion]]",
                  "Ber om [[WP:HS|hurtigsletting]]", "Requestin delytion", "Requesting [[WP:QD|quick deletion]]",
                  "–ù–æ–º—ñ–Ω–∞—Ü—ñ—è —Å—Ç–∞—Ç—Ç—ñ –Ω–∞ [[–í—ñ–∫—ñ–ø–µ–¥—ñ—è:–ö—Ä–∏—Ç–µ—Ä—ñ—ó —à–≤–∏–¥–∫–æ–≥–æ –≤–∏–ª—É—á–µ–Ω–Ω—è|—à–≤–∏–¥–∫–µ –≤–∏–ª—É—á–µ–Ω–Ω—è]]", "ÊèêÊä•Âø´ÈÄüÂà†Èô§",
                  "Y√™u c·∫ßu [[WP:CSD|xo√° nhanh]]", "Requesting speedy deletion"]
# –°—Ç—Ä–æ–≥–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
DELETE_SUMMARY_STRICT = ["Smazat", "Leschotrog", "L√∂schantrag", "Nuweg", "–ö–ë–£", "+delete", "+ delete"]
STREAM_URL = 'https://stream.wikimedia.org/v2/stream/mediawiki.revision-tags-change,mediawiki.revision-create'
USER_AGENT = {"User-Agent": "SW-Wars; iluvatar@tools.wmflabs.org; python3.9; requests"}
TOKEN = config["SWVWars"]["bot_discord_token"]
Intents = discord.Intents.default()
Intents.members = True
Intents.message_content = True
allowed_mentions = discord.AllowedMentions(roles=True)
client = commands.Bot(intents=Intents, command_prefix="/")
GLOBAL_GROUPS = []
storage = []


# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
def prepare(arr):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–æ–≥–∏–∫—É –æ–ø–æ–≤–µ—â–µ–Ω–∏—è. –ï—Å–ª–∏ –ø—Ä–∞–≤–∫–∏ –æ–¥–Ω–æ–≥–æ —é–∑–µ—Ä–∞, —Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥ —é–∑–µ—Ä–∞.
    # –ï—Å–ª–∏ –ø—Ä–∞–≤–∫–∏ —Ä–∞–∑–Ω—ã—Ö —é–∑–µ—Ä–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    # –ï—Å–ª–∏ –Ω–∏ —Ç–æ, –Ω–∏ –¥—Ä—É–≥–æ–µ, —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–∏–µ –ø—Ä–∞–≤–∫–∏.
    users, pages = [], []
    for index, el in enumerate(arr):
        arr[index].reported = True
        if el.user not in users:
            users.append(el.user)
        if el.title not in pages:
            pages.append(el.title)
    if len(pages) == 1:
        descr = "**Page**:\t{0}.".format(pages[0].replace("_", " "))
        return descr, arr[0].get_url("page")
    else:
        if len(users) == 1:
            descr = "**User**:\t{0}.".format(users[0].replace("_", " "))
            return descr, arr[0].get_url("user")
        else:
            descr = "**Users**:\t{0};\n**Pages**:\t{1}.".format(", ".join(users).replace("_", " "),
                                                                ", ".join(pages).replace("_", " "))
            return descr, arr[0].get_url("other")


# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ –∑–∞ –≤—ã—á–µ—Ç–æ–º –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –∫–æ–ª-–≤–∞ –º–∏–Ω—É—Ç (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–∫–∏).
def timestamp_eq(timestamp_now, timestamp_rev, minutes):
    timestamp_now = datetime.strptime(timestamp_now, '%Y-%m-%dT%H:%M:%S%z') - timedelta(minutes=minutes)
    return False if timestamp_now > datetime.strptime(timestamp_rev, '%Y-%m-%dT%H:%M:%S%z') else True


# –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —é–∑–µ—Ä–∞ –∏ id —Ä–µ–≤–∏–∑–∏–∏
# –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ —É—Å–ø–µ–ª —Å–æ–≤–µ—Ä—à–∏—Ç—å –Ω–æ–≤—É—é –ø—Ä–∞–≤–∫—É –∑–∞ 25 —Å–µ–∫—É–Ω–¥, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è –Ω–µ–≤–µ—Ä–Ω–æ.
def get_next_user(domain, page_id, title, timestamp_stream, timestamp):
    next_user = next_parent_id = next_rev_id = -1
    for act in ["mw-rollback", "mw-manual-revert", "mw-undo"]:
        data = {
            "action": "query", "prop": "revisions", "titles": title, "rvlimit": 10, "rvprop": "user|ids",
            "rvstart": timestamp_stream, "rvend": timestamp, "rvtag": act, "format": "json", "utf8": 1
        }
        try:
            next_user_raw = requests.post("https://{0}/w/api.php".format(domain), data=data, headers=USER_AGENT).json()
            next_user = next_user_raw["query"]["pages"][str(page_id)]["revisions"][0]["user"]
            next_parent_id = next_user_raw["query"]["pages"][str(page_id)]["revisions"][0]["parentid"]
            next_rev_id = next_user_raw["query"]["pages"][str(page_id)]["revisions"][0]["revid"]
        except Exception as next_user_error:
            if str(next_user_error) != "'revisions'":
                logging.error("Get next user error: {0}".format(next_user_error))
            pass
        else:
            break
    return next_user, next_parent_id, next_rev_id


# –ë–µ—Ä—ë–º —Ñ–ª–∞–≥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
def get_next_user_groups(domain, user):
    if re.search("^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$", user, re.I) or ":" in user:
        return []
    data = {"action": "query", "list": "users", "ususers": user, "usprop": "groups", "format": "json", "utf8": 1}
    try:
        r = requests.post("https://{0}/w/api.php".format(domain), data=data, headers=USER_AGENT).json()
        next_user_groups = r["query"]["users"][0]["groups"]
    except Exception as next_user_groups_error:
        logging.error("Get groups error: {0}".format(next_user_groups_error))
        return []
    else:
        return next_user_groups


# –û–ø–æ–≤–µ—â–∞–µ–º –µ—Å–ª–∏ –Ω–∞–∫–æ–ø–∏–ª–æ—Å—å –±–æ–ª–µ–µ 3 –ø—Ä–∞–≤–æ–∫ –∏ –æ–± —ç—Ç–æ–π –≤–∏–∫–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å –Ω–µ –æ–ø–æ–≤–µ—â–∞–ª–æ—Å—å.
def report(wiki):
    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª-–≤–æ –Ω–∞–∫–∞–ø–∞–≤—à–∏—Ö –æ—Ç–∫–∞—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ.
    edits_rep = [x for x in storage if x.wiki == wiki]
    # –ï—Å–ª–∏ —Å—Ä–µ–¥–∏ –Ω–∏—Ö –µ—Å—Ç—å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ (X –º–∏–Ω—É—Ç —Å –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –Ω–µ –ø—Ä–æ—à–ª–æ), —Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç.
    wiki_reported = len([y for y in edits_rep if y.reported])
    if len(edits_rep) >= LIMIT and wiki_reported == 0:
        descr, url_target = prepare(edits_rep)
        embed = discord.Embed(type="rich", title=wiki.upper(), description=descr, color=0xff0008, url=url_target)
        send_report(embed, CHANNEL["ROLES"]["üáº"], wiki)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–≥–æ–≤ –≤ –ø—Ä–∞–≤–∫–µ
def check_tags(change, tag):
    if "tags" in change and tag not in change["tags"]:
        return False
    # –ï—Å–ª–∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –Ω–µ –±—ã–ª–æ —Ç–µ–≥–∞ –æ—Ç–∫–∞—Ç–∞, –∑–Ω–∞—á–∏—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –∏–º–µ–Ω–Ω–æ –æ–Ω.
    return True if "prior_state" not in change or "tags" not in change["prior_state"] or \
                   tag not in change["prior_state"]["tags"] else False


def another_user(change):
    embed = discord.Embed(type="rich", title=change["database"].upper(),
                          description="Edit on other's userpage\n**Userpage**:\t{0};\n**User**:\t{1}."
                          .format(change["page_title"].replace("_", " "), change["performer"]["user_text"]
                                  .replace("_", " ")), color=0xffff00, url="https://{0}/wiki/{1}?uselang=en"
                          .format(change["meta"]["domain"], quote.quote_plus(change["page_title"])))
    send_report(embed, CHANNEL["ROLES"]["üá∏"], "{0}: {1}".format(change["database"], change["page_title"]))


def new_handler(change):
    if change["database"] not in WIKI_SET:
        return
    if change["performer"]["user_is_bot"] or ("user_is_bot" in change["performer"]
                                              and change["performer"]["user_is_bot"]) \
            or change["performer"]["user_text"] in GLOBAL_GROUPS:
        return
    if change["page_is_redirect"]:
        return
    if "user_edit_count" in change["performer"] and change["performer"]["user_edit_count"] > EDIT_COUNT:
        return
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º—ë–Ω (–õ–° –∏ –æ—Å–Ω–æ–≤–Ω–æ–µ), –¥–ª–∏–Ω—É —Å—Ç–∞–Ω–∏—Ü—ã –≤ –±–∞–π—Ç–∞—Ö –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ç–µ–≥–æ–≤ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    if change["page_namespace"] == 2 or \
            (change["page_namespace"] == 0 and "rev_len" in change and change["rev_len"] > PAGE_SIZE):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –õ–ü –ø–æ–¥—Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
        if change["page_namespace"] == 2 and "/" in change["page_title"]:
            return
        # –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ —Å–≤–æ–µ–π –õ–°
        if change["page_namespace"] == 2:
            title = re.sub("^.*?:", "", change["page_title"].replace("_", " "))
            if title != change["performer"]["user_text"]:
                another_user(change)
                return
        try:
            url_check_els = "https://{0}/wiki/{1}?action=raw".format(change["meta"]["domain"],
                                                                     quote.quote_plus(change["page_title"]))
            text_check_els = requests.get(url_check_els).text
            if len([el for el in ELEMENTS if el in text_check_els]) > 0:
                return
        except Exception as get_raw_error:
            logging.error("Get check elements text error: {0}".format(get_raw_error))
            return
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–º–∏–Ω–∏–º—É–º 1)
        try:
            data = {
                "action": "query", "prop": "extlinks", "titles": change["page_title"], "ellimit": 10, "format": "json",
                "utf8": 1
            }
            ext_check = requests.post("https://{0}/w/api.php".format(change["meta"]["domain"]),
                                      data=data, headers=USER_AGENT).json()
            if "extlinks" not in ext_check["query"]["pages"][str(change["page_id"])]:
                return
            if len(ext_check["query"]["pages"][str(change["page_id"])]["extlinks"]) == 0:
                return
        except Exception as links_error:
            logging.error("Get external links error: {0}".format(links_error))
            return
        prefix_title = "Page" if change["page_namespace"] == 0 else "Userpage"
        embed = discord.Embed(type="rich", title=change["database"].upper(),
                              description="New {0} by newbie\n**{1}**:\t{2}.".format(prefix_title.lower(), prefix_title,
                                                                                     change["page_title"]
                                                                                     .replace("_", " ")),
                              color=0xffff00, url="https://{0}/wiki/{1}?oldid={2}&uselang=en"
                              .format(change["meta"]["domain"], quote.quote_plus(change["page_title"]),
                                      change["rev_id"]))
        send_report(embed, CHANNEL["ROLES"]["üá∏"], "{0}: {1}".format(change["database"], change["page_title"]))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Å—Ç—Ä–∏–º–µ revision-create –¥–ª—è –ø–æ–∏—Å–∫–∞ –ö–ë–£
def delete_handler(change):
    if change["database"] not in WIKI_SET or change["performer"]["user_text"] in GLOBAL_GROUPS:
        return
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–∞–≤–∫–µ –∏ –∏—â–µ–º –ö–ë–£ –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    if "comment" in change:
        if change["comment"].lower() in (comm.lower() for comm in DELETE_SUMMARY_STRICT) \
                or len([ds for ds in DELETE_SUMMARY if ds.lower() in change["comment"].lower()]) > 0:
            if "tags" not in change or change["tags"] != "mw-reverted":
                # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ —Å–ª—É—á–∞–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ö–ë–£. –û–ø–æ–≤–µ—â–µ–Ω–∏–µ.
                embed = discord.Embed(type="rich", title=change["database"].upper(),
                                      description="Speedy deletion request\n**Page**:\t{0}.".format(change["page_title"]
                                                                                                    .replace("_", " ")),
                                      color=0x00ff00, url="https://{0}/wiki/{1}?uselang=en"
                                      .format(change["meta"]["domain"], quote.quote_plus(change["page_title"])))
                send_report(embed, CHANNEL["ROLES"]["üá©"], "{0}: {1}".format(change["database"], change["page_title"]))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Å—Ç—Ä–∏–º–∞ tags-change –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–∫–∞—Ç–æ–≤
def revert_handler(change):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –º–∞–ª—ã–º –∫–æ–ª-–≤–æ–º –∞–¥–º–∏–Ω–æ–≤
    if change["database"] not in WIKI_SET:
        return
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ —Ç–µ–≥–∏ —É –ø—Ä–∞–≤–∫–∏ –∏ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–≥–∞ –æ—Ç–∫–∞—á–µ–Ω–Ω–æ–π –ø—Ä–∞–≤–∫–∏
    if not check_tags(change, "mw-reverted"):
        return
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–∞–≤–∫–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º –Ω–∞—Ö–ª–æ–±—É—á–∏–≤–∞–Ω–∏—è —Ç–µ–≥–∞: –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –Ω–∞
    # ¬´—á–∏—Å—Ç–∫—É¬ª –ø—Ä–æ–µ–∫—Ç–∞
    if not timestamp_eq(change["meta"]["dt"], change["rev_timestamp"], 100):
        return
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∫–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–º –±–æ–ª–µ–µ X –º–∏–Ω
    for index, item in enumerate(storage):
        if (time.time() - item.timestamp) >= MINUTES * 60:
            del storage[index]
    # –ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, X –º–∏–Ω –Ω–µ –ø—Ä–æ—à–ª–æ)
    if len([x for x in storage if x.wiki == change["database"] and x.reported]) > 0:
        return
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —é–∑–µ—Ä–∞ –∏ id –ø—Ä–∞–≤–∫–∏ (–±–æ–ª–µ–µ –Ω–æ–≤–∞—è —Å —Ç–µ–≥–æ–º –æ—Ç–∫–∞—Ç–∞) –∏ –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ —Å–µ–±—è –ª–∏ –æ—Ç–∫–∞—Ç–∏–ª —é–∑–µ—Ä
    # –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –≥–ª–æ–±–∞–ª—å–Ω—ã–º –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–º –∞–¥–º–∏–Ω–æ–º.
    next_user, next_parent_id, next_id = get_next_user(change["meta"]["domain"],
                                                       change["page_id"], change["page_title"],
                                                       change["meta"]["dt"], change["rev_timestamp"])
    if next_user != -1:
        groups = get_next_user_groups(change["meta"]["domain"], next_user)
        if change["performer"]["user_is_bot"] or ("user_is_bot" in change["performer"]
                                                  and change["performer"]["user_is_bot"]) \
                or "sysop" in groups or next_user in GLOBAL_GROUPS:
            return
        if next_parent_id != -1:
            # –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø—Ä–∞–≤–∫–∞ —É –Ω–æ–≤–æ–π –ø—Ä–∞–≤–∫–∏ —Å —Ç–µ–≥–æ–º –æ—Ç–∫–∞—Ç–∞ —Ä–∞–≤–Ω–∞ –Ω–∞—à–µ–π —Ç–µ–∫—É—â–µ–π, —Ä–∞–≤–Ω—ã —é–∑–µ—Ä—ã, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ
            # —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –æ—Ç–∫–∞—Ç —é–∑–µ—Ä–æ–º —Å–≤–æ–µ–π –ø—Ä–∞–≤–∫–∏.
            if next_parent_id == change["rev_id"] and next_user == change["performer"]["user_text"]:
                return
    rev_parent_id = -1 if "rev_parent_id" not in change else change["rev_parent_id"]
    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç—ã —Å —Ç–æ–π –∂–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–π —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–∞–≤–∫–æ–π —Å —Ç–µ–≥–æ–º –æ—Ç–∫–∞—Ç–∞, –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ —ç—Ç–æ
    # –±—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–∞—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–∞–≤–æ–∫ –∏ –Ω–µ –≤–∫–ª—é—á–∞–µ–º –≤ –º–∞—Å—Å–∏–≤ –Ω–æ–≤—É—é –ø—Ä–∞–≤–∫—É (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ 1-–π –Ω–∞ –∫–∞–∂–¥—ã–π –∏–∑ –æ—Ç–∫–∞—Ç–æ–≤).
    if len([x for x in storage if x.next_id == next_id and next_id != -1 and x.wiki == change["database"]]) > 0:
        return
    storage.append(Edit(change["meta"]["domain"], change["database"], change["page_title"], change["page_id"],
                        change["rev_id"], rev_parent_id, next_id, next_user, change["performer"]["user_text"],
                        change["rev_len"], "revert", time.time()))
    report(change["database"])


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/clear", –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
@client.command()
async def clear(ctx: commands.Context):
    if ctx.channel.id == CHANNEL["BOTCOMMANDS"]:
        channel = client.get_channel(CHANNEL["ID"])
        messages = channel.history(limit=MAX_MESSAGES)
        async for msg in messages:
            if msg.author.id == CHANNEL["BOT"]:
                fetch_msg = await channel.fetch_message(msg.id)
                await fetch_msg.delete()


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def send_report(embed, role, short_summary):
    channel = client.get_channel(CHANNEL["ID"])
    role = discord.utils.get(channel.guild.roles, id=role)
    # –ü–æ–∫–∞ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –≤ –Ω–∞—á–∞–ª–µ, –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞: –≤ –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –≤–º–µ—Å—Ç–æ
    # —Ü–µ–ª–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ - —Å—Ç—Ä–æ–∫–∞ —Å –ø–∏–Ω–≥–∞–º–∏
    # content="{0}?\t{1}".format(role.mention, short_summary.replace("_", " "))
    client.loop.create_task(channel.send(content="", tts=False,
                                         allowed_mentions=allowed_mentions, embed=embed))


# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Discord, –∞–Ω–∞–ª–∏–∑–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è (–∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö)
@tasks.loop(minutes=float(REPEAT / 60))
async def get_messages():
    channel = client.get_channel(CHANNEL["ID"])
    # —É–¥–∞–ª–µ–Ω–∏–µ —Å –∫–æ–¥–∞–º–∏ 404 –ø–æ —Å—Å—ã–ª–∫–∞–º
    messages = channel.history(limit=MAX_MESSAGES)
    async for msg in messages:
        if msg.author.id != CHANNEL["BOT"]:
            continue
        for embed in msg.embeds:
            embed_dict = embed.to_dict()
            # print(embed_dict["color"]) - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–æ—Ç–∞
            if embed_dict["color"] in CHANNEL["COLORS"]:
                url = re.sub("[?|&]oldid=\\d*", "", embed_dict["url"])
                url = re.sub("[?|&]uselang=en", "", url)
                url = "{0}?action=raw".format(url)
                try:
                    code = requests.get(url).status_code
                except Exception as status_error:
                    logging.error("Get status code error: {0}".format(status_error))
                else:
                    if code == 404:
                        fetch_msg = await channel.fetch_message(msg.id)
                        await fetch_msg.delete()
                        break
    time.sleep(5)
    # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º
    messages = channel.history(limit=MAX_MESSAGES)
    async for msg in messages:
        if msg.author.id != CHANNEL["BOT"]:
            continue
        for reaction in msg.reactions:
            if hasattr(reaction.emoji, "id"):
                # print(reaction.emoji.id) - - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è id —ç–º–æ–¥–∑–∏ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–æ—Ç–∞
                if reaction.emoji.id in CHANNEL["EMOJI_IDS"]:
                    fetch_msg = await channel.fetch_message(msg.id)
                    await fetch_msg.delete()
                    break


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
@client.event
async def on_raw_reaction_add(reaction):
    await role_change(reaction, "add")


# –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
@client.event
async def on_raw_reaction_remove(reaction):
    await role_change(reaction, "remove")


# –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è / —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π
async def role_change(reaction, action):
    if reaction.channel_id == CHANNEL["README"] and reaction.message_id == CHANNEL["README_MSG"]:
        if reaction.emoji.name == "üá©" or reaction.emoji.name == "üá∏" or reaction.emoji.name == "üáº":
            role_id = CHANNEL["ROLES"][reaction.emoji.name]
            channel = client.get_channel(reaction.channel_id)
            role = discord.utils.get(channel.guild.roles, id=role_id)
            member = channel.guild.get_member(reaction.user_id)
            await member.add_roles(role) if action == "add" else await member.remove_roles(role)


# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞-—á–∏—Å—Ç–∏–ª—å—â–∏–∫–∞
@client.event
async def on_ready():
    # —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ä–µ–∞–∫—Ü–∏–π
    get_messages.start()


def update_wikiset():
    try:
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å—Ç—é–∞—Ä–¥–æ–≤ –∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        data = {
            "action": "query", "list": "globalallusers", "agulimit": 500, "agugroup": "steward|global-sysop",
            "format": "json", "utf8": 1
        }
        global_groups_r = requests.post(url="https://meta.wikimedia.org/w/api.php", data=data,
                                        headers=USER_AGENT).json()
        global GLOBAL_GROUPS
        GLOBAL_GROUPS = [s["name"] for s in global_groups_r["query"]["globalallusers"]]

        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
        file_active_sysops = open(os.path.dirname(os.getcwd()) + "/swviewer/public_html/lists/active_sysops.json")
        active_sysops = json.loads(file_active_sysops.read())
        file_active_sysops.close()
        # –ú–µ–Ω–µ–µ —Ç—Ä—ë—Ö –∞–¥–º–∏–Ω–æ–≤ —Å –ø—Ä–∞–≤–∫–∞–º–∏ –∏–ª–∏ –ª–æ–≥–∞–º–∏ –∑–∞ 2 –º–µ—Å—è—Ü–∞ –∏–ª–∏ –º–µ–Ω–µ–µ —Ç—Ä—ë—Ö –∞–¥–º–∏–Ω–∞ —Å –ø—Ä–∞–≤–∫–∞–º–∏ –∏–ª–∏ –ª–æ–≥–∞–º–∏ –∑–∞ 1 –Ω–µ–¥–µ–ª—é
        # –ø—Ä–∏ –æ–±—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–æ–≤ –º–µ–Ω–µ–µ 10
        wiki_set_raw = [active_sysop for active_sysop in active_sysops if active_sysops[active_sysop][3] <= 2 or
                        (active_sysops[active_sysop][4] <= 2 and active_sysops[active_sysop][2] < 10)]
        if len(wiki_set_raw) > 10:
            global WIKI_SET
            WIKI_SET = wiki_set_raw
    except Exception as active_sysops_error:
        logging.error("Update data error: {0}. Closed.".format(active_sysops_error))
        time.sleep(120)
        update_wikiset()
    time.sleep(UPD_DELAY * 60 * 60)
    update_wikiset()


def streams_start():
    try:
        for event in EventSource(STREAM_URL, retry=30000):
            if event.event == 'message':
                try:
                    e = json.loads(event.data)
                except ValueError:
                    pass
                else:
                    if e["meta"]["stream"] == "mediawiki.revision-tags-change":
                        revert_handler(e)
                    else:
                        delete_handler(e) if "rev_parent_id" in e else new_handler(e)
    except Exception as e:
        logging.error("Stream error: {0}".format(e))
        time.sleep(5 * 60)  # 5 –º–∏–Ω
        streams_start()


# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫–∏ —Å –±–æ—Ç–æ–º-—á–∏—Å—Ç–∏–ª—å—â–∏–∫–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
threading.Thread(target=update_wikiset, name="update").start()
threading.Thread(target=client.run, args=[TOKEN], kwargs={"reconnect": True, "log_level": logging.ERROR},
                 name="cleaner").start()

# —Ü–∏–∫–ª –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
while len(GLOBAL_GROUPS) == 0 or len(WIKI_SET) == 0:
    time.sleep(1)

streams_start()
